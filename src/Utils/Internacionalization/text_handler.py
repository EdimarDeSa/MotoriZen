from enum import StrEnum


class ModelsDescriptionTexts(StrEnum):
    LAST_UPDATE = "Last update for this dataset."
    CREATION = "Creation date for this dataset."
    PAGE = "Page number for this dataset."
    REPORTS = "Reports to be returned, check Reports<type>Enum above. Can be multiple. If not provided, all reports will be returned."
    CAR_IDS = "Car ids to be returned. If not provided, all cars will be returned."
    PER_PAGE = "Records per page for this dataset."
    SORT_BY = "Field to sort this dataset by."
    TIME_FRAME = "Time range to search for reports. If not provided, current week will be used. Week starts on Monday."
    AGGREGATION_INTERVAL = "Aggregation interval for reports. If not provided, reports will not be aggregated."
    SORT_ORDER = "Order to sort the dataset (asc/desc)."
    REFRESH_TOKEN = "Refresh token for this session."
    ACCESS_TOKEN = "Access token for this session."
    TOKEN_TYPE = "Type of token."
    EXPIRES_IN = "Time in seconds until the access token expires."
    REFRESH_EXPIRES_IN = "Time in seconds until the refresh token expires."
    SESSION_STATE = "State of the session."
    NOT_BEFORE_POLICY = "Time in seconds until the token is not valid."
    SCOPE = "Scope of the session."
    TOTAL_RESULTS = "Total number of results in this dataset."
    RANGE_START = "Start point for results in this field."
    TOTAL_CARS = "Total number OF car selected for this query."
    RANGE_END = "End point for results in this field."
    RESULTS = "Results contained in this dataset."
    ID_BRAND = "Unique identifier for the brand."
    BRAND_NAME = "Name of the brand."
    CAR_ID = "Unique identifier for the car."
    USER_CD = "Code identifying the user."
    CD_BRAND = "Code identifying the brand."
    RENAVAM = "Unique identifier for the vehicle (RENAVAM)."
    CAR_MODEL = "Model of the car."
    CAR_YEAR = "Year of manufacture of the car."
    CAR_COLOR = "Color of the car."
    LICENSE_PLATE = "License plate of the car."
    IS_ACTIVE = "Indicates if the record is active."
    REGISTER_ID = "Unique identifier for the register."
    CAR_CD = "Code identifying the car."
    ODOMETER = "Current odometer reading of the car."
    DISTANCE = "Distance traveled by the car."
    WORKING_TIME = "Total working time of the car."
    MEAN_CONSUMPTION = "Average fuel consumption of the car."
    NUMBER_OF_TRIPS = "Total number of trips made by the car."
    TOTAL_VALUE = "Total value associated with the car."
    REGISTER_DATE = "Date the register was created."
    QUERY_FILTERS = "Filters applied to the query."
    QUERY_OPTIONS = "Options available for the query."
    UPDATES = "Updates made to the dataset."
    NEW_REGISTRY = "Indicates if this is a new registry."
    FIRST_NAME = "First name of the user."
    LAST_NAME = "Last name of the user."
    EMAIL = "Email address of the user."
    PASSWORD = "Password for the user account."
    BIRTHDATE = "Birth date of the user."
    AUTH_CD = "Authentication ID."
    RESPONSE_CODE = "Response code."
    BASE_DATA = "Returned data from the server."
    EXCEPTIONS_DATA = "Model with error details."
    EXCEPTIONS_RC = "Error mapped from MotorizenErrorEnum"
    CAR_DATA = "New car data after update."
    INVALID_UPDATES_DATA = "Invalid updates data. Please, provide at least one value to update."
    INVALID_REGISTER_DATA = "Invalid register data. Please, provide the fields: distance and/or odometer."
    TOTAL_BYTES = "Total bytes received from the server."
    TOTAL_PAGES = "Total pages existing in the server."
    FIRST_INDEX = "First index in this page."
    LAST_INDEX = "Last index in this page."
    METADATA = "Metadata for this page and query."
    CD_FUEL_TYPE = "Id of the fuel type."
    FUEL_CAPACITY = "Capacity of the fuel. Must be greater than zero. If not specified the default is 1."
